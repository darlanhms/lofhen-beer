// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid()) @db.Uuid
  name      String     @db.VarChar(255)
  username  String     @db.VarChar(255)
  role      Role
  password  String     @db.VarChar(255)
  createdAt DateTime   @default(now()) @map("created_at")
  deleted   Boolean    @default(false)
  customers Customer[]

  @@map("user")
}

enum Role {
  ADMIN
  AGENT
}

model State {
  id     String @id @default(uuid()) @db.Uuid
  name   String @unique @db.VarChar(255)
  abbr   String @db.VarChar(10)
  cities City[]

  @@map("state")
}

model City {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @unique @db.VarChar(255)
  stateId   String    @map("state_id") @db.Uuid
  state     State     @relation(fields: [stateId], references: [id])
  addresses Address[]

  @@map("city")
}

model Customer {
  id          String    @id @default(uuid()) @db.Uuid
  name        String    @db.VarChar(255)
  birthdate   DateTime? @db.Date
  phone       String?   @db.VarChar(50)
  observation String?   @db.VarChar(500)
  createdAt   DateTime  @default(now()) @map("created_at")
  createdBy   String    @map("created_by") @db.Uuid
  user        User      @relation(fields: [createdBy], references: [id])
  addresses   Address[]
  enabled     Boolean   @default(true) @db.Boolean

  @@map("customer")
}

model Address {
  id           String    @id @default(uuid()) @db.Uuid
  alias        String    @db.VarChar(255)
  cityId       String    @db.Uuid @map("city_id")
  city         City      @relation(fields: [cityId], references: [id])
  customerId   String?   @db.Uuid  @map("customer_id")
  customer     Customer? @relation(fields: [customerId], references: [id])
  link         String?   @db.Text
  neighborhood String?   @db.VarChar(255)
  street       String?   @db.VarChar(255)
  number       String?   @db.VarChar(50)
  complement   String?   @db.VarChar(511)
  reference    String?   @db.VarChar(511)
  enabled      Boolean   @default(true) @db.Boolean

  @@map("address")
}
